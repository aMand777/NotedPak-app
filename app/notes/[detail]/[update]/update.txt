'use client';
import React from 'react';
import Button from '../../../components/elements/Button';
import Link from 'next/link';
import { useState } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import axios from 'axios';
import Category from '../../../components/templates/Category';
import UpdateNote from '../../../components/templates/UpdateNote';

const NoteUpdate = () => {
  const searchParams = useSearchParams();
  const _id = searchParams.get(`id`);
  const router = useRouter();

  const defaultValue = {
    title: searchParams.get('title') || '',
    body: searchParams.get('body') || '',
    tags: searchParams.get('tags') || '',
  };

  const [values, setValues] = useState(defaultValue);

  const handleChange = (event) => {
    event.preventDefault();
    const { name, value } = event.target;
    setValues({ ...values, [name]: value });
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    if (!values.title) {
      alert('Title is required');
    } else if (!values.body) {
      alert('Note is required');
    } else {
      axios
        .put(`${process.env.NEXT_PUBLIC_API_URL}/notes/${_id}`, values)
        .then((response) => {
          router.push('/');
          alert(response.statusText);
        })
        .catch((error) => {
          alert(error.message);
        });
    }
  };

  const handleKeyDown = (event) => {
    if (event.key === 'Enter') {
      event.preventDefault();
      handleSubmit(event);
    }
  };

  return (
    <>
      <UpdateNote /
    </>
  )
};

export default NoteUpdate;

  // return (
  //   <>
  //     <form onSubmit={handleSubmit}>
  //       <div className="sm:w-11/12 md:w-10/12 mx-auto">
  //         <div className="bg-secondary rounded-lg w-8/12 sm:w-7/12 md:w-5/12 h-fit my-5 shadow-2xl mx-auto">
  //           <div className="p-1 ">
  //             <p className="text-center border border-white rounded-lg">
  //               <input
  //                 type="text"
  //                 id="title"
  //                 name="title"
  //                 placeholder="title .."
  //                 maxLength={20}
  //                 value={values.title}
  //                 onChange={handleChange}
  //                 onKeyDown={handleKeyDown}
  //                 required
  //                 className="w-8/12 italic text-center bg-secondary focus:outline-none"
  //               />
  //             </p>
  //             <p className="text-sm my-3 mx-1 italic">
  //               <textarea
  //                 type="body"
  //                 rows="5"
  //                 id="body"
  //                 name="body"
  //                 value={values.body}
  //                 onChange={handleChange}
  //                 required
  //                 placeholder="input your note here .."
  //                 className="italic bg-secondary focus:outline-none w-full h-fit resize-none"></textarea>
  //             </p>
  //           </div>
  //           <div className="bg-secondary rounded-lg flex justify-between mx-auto flex-row w-full border border-white">
  //             <Category value={values.tags} onChange={handleChange} />
  //             <p className="text-xs text-slate-700 italic self-center"></p>
  //           </div>
  //         </div>
  //         <div className="w-8/12 sm:w-7/12 md:w-5/12 mx-auto flex flex-row justify-between">
  //           <Link href={`/notes${_id}`}>
  //           <Button>Back</Button>
  //           </Link>
  //           <Button>Save</Button>
  //         </div>
  //       </div>
  //     </form>
  //   </>
  // ); */}
{/* };